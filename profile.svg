<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="970" onload="init(evt)" viewBox="0 0 1200 970" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="970" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy record -o profile.svg -- python easy21.py</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="959.00"> </text><svg id="frames" x="10" width="1180"><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:971) (3 samples, 0.15%)</title><rect x="0.0991%" y="196" width="0.1486%" height="15" fill="rgb(227,0,7)"/><text x="0.3491%" y="206.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:914) (3 samples, 0.15%)</title><rect x="0.0991%" y="212" width="0.1486%" height="15" fill="rgb(217,0,24)"/><text x="0.3491%" y="222.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1407) (3 samples, 0.15%)</title><rect x="0.0991%" y="228" width="0.1486%" height="15" fill="rgb(221,193,54)"/><text x="0.3491%" y="238.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1379) (3 samples, 0.15%)</title><rect x="0.0991%" y="244" width="0.1486%" height="15" fill="rgb(248,212,6)"/><text x="0.3491%" y="254.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1506) (3 samples, 0.15%)</title><rect x="0.0991%" y="260" width="0.1486%" height="15" fill="rgb(208,68,35)"/><text x="0.3491%" y="270.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:142) (3 samples, 0.15%)</title><rect x="0.0991%" y="276" width="0.1486%" height="15" fill="rgb(232,128,0)"/><text x="0.3491%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:971) (3 samples, 0.15%)</title><rect x="0.3962%" y="388" width="0.1486%" height="15" fill="rgb(207,160,47)"/><text x="0.6462%" y="398.50"></text></g><g><title>&lt;module&gt; (traceback.py:5) (4 samples, 0.20%)</title><rect x="0.3962%" y="260" width="0.1981%" height="15" fill="rgb(228,23,34)"/><text x="0.6462%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (4 samples, 0.20%)</title><rect x="0.3962%" y="276" width="0.1981%" height="15" fill="rgb(218,30,26)"/><text x="0.6462%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (4 samples, 0.20%)</title><rect x="0.3962%" y="292" width="0.1981%" height="15" fill="rgb(220,122,19)"/><text x="0.6462%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (4 samples, 0.20%)</title><rect x="0.3962%" y="308" width="0.1981%" height="15" fill="rgb(250,228,42)"/><text x="0.6462%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:848) (4 samples, 0.20%)</title><rect x="0.3962%" y="324" width="0.1981%" height="15" fill="rgb(240,193,28)"/><text x="0.6462%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.20%)</title><rect x="0.3962%" y="340" width="0.1981%" height="15" fill="rgb(216,20,37)"/><text x="0.6462%" y="350.50"></text></g><g><title>&lt;module&gt; (linecache.py:11) (4 samples, 0.20%)</title><rect x="0.3962%" y="356" width="0.1981%" height="15" fill="rgb(206,188,39)"/><text x="0.6462%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (4 samples, 0.20%)</title><rect x="0.3962%" y="372" width="0.1981%" height="15" fill="rgb(217,207,13)"/><text x="0.6462%" y="382.50"></text></g><g><title>&lt;module&gt; (easy21.py:2) (14 samples, 0.69%)</title><rect x="0.0000%" y="68" width="0.6934%" height="15" fill="rgb(231,73,38)"/><text x="0.2500%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (14 samples, 0.69%)</title><rect x="0.0000%" y="84" width="0.6934%" height="15" fill="rgb(225,20,46)"/><text x="0.2500%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (14 samples, 0.69%)</title><rect x="0.0000%" y="100" width="0.6934%" height="15" fill="rgb(210,31,41)"/><text x="0.2500%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (14 samples, 0.69%)</title><rect x="0.0000%" y="116" width="0.6934%" height="15" fill="rgb(221,200,47)"/><text x="0.2500%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:848) (14 samples, 0.69%)</title><rect x="0.0000%" y="132" width="0.6934%" height="15" fill="rgb(226,26,5)"/><text x="0.2500%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (14 samples, 0.69%)</title><rect x="0.0000%" y="148" width="0.6934%" height="15" fill="rgb(249,33,26)"/><text x="0.2500%" y="158.50"></text></g><g><title>&lt;module&gt; (logging\__init__.py:26) (12 samples, 0.59%)</title><rect x="0.0991%" y="164" width="0.5944%" height="15" fill="rgb(235,183,28)"/><text x="0.3491%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (12 samples, 0.59%)</title><rect x="0.0991%" y="180" width="0.5944%" height="15" fill="rgb(221,5,38)"/><text x="0.3491%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (9 samples, 0.45%)</title><rect x="0.2476%" y="196" width="0.4458%" height="15" fill="rgb(247,18,42)"/><text x="0.4976%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (9 samples, 0.45%)</title><rect x="0.2476%" y="212" width="0.4458%" height="15" fill="rgb(241,131,45)"/><text x="0.4976%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:848) (8 samples, 0.40%)</title><rect x="0.2972%" y="228" width="0.3962%" height="15" fill="rgb(249,31,29)"/><text x="0.5472%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 0.40%)</title><rect x="0.2972%" y="244" width="0.3962%" height="15" fill="rgb(225,111,53)"/><text x="0.5472%" y="254.50"></text></g><g><title>&lt;module&gt; (numpy\__init__.py:138) (5 samples, 0.25%)</title><rect x="0.7925%" y="164" width="0.2476%" height="15" fill="rgb(238,160,17)"/><text x="1.0425%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (5 samples, 0.25%)</title><rect x="0.7925%" y="180" width="0.2476%" height="15" fill="rgb(214,148,48)"/><text x="1.0425%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (5 samples, 0.25%)</title><rect x="0.7925%" y="196" width="0.2476%" height="15" fill="rgb(232,36,49)"/><text x="1.0425%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (5 samples, 0.25%)</title><rect x="0.7925%" y="212" width="0.2476%" height="15" fill="rgb(209,103,24)"/><text x="1.0425%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:848) (5 samples, 0.25%)</title><rect x="0.7925%" y="228" width="0.2476%" height="15" fill="rgb(229,88,8)"/><text x="1.0425%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.25%)</title><rect x="0.7925%" y="244" width="0.2476%" height="15" fill="rgb(213,181,19)"/><text x="1.0425%" y="254.50"></text></g><g><title>&lt;module&gt; (numpy\_version.py:7) (5 samples, 0.25%)</title><rect x="0.7925%" y="260" width="0.2476%" height="15" fill="rgb(254,191,54)"/><text x="1.0425%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (5 samples, 0.25%)</title><rect x="0.7925%" y="276" width="0.2476%" height="15" fill="rgb(241,83,37)"/><text x="1.0425%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (3 samples, 0.15%)</title><rect x="0.8915%" y="292" width="0.1486%" height="15" fill="rgb(233,36,39)"/><text x="1.1415%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (3 samples, 0.15%)</title><rect x="0.8915%" y="308" width="0.1486%" height="15" fill="rgb(226,3,54)"/><text x="1.1415%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:848) (3 samples, 0.15%)</title><rect x="0.8915%" y="324" width="0.1486%" height="15" fill="rgb(245,192,40)"/><text x="1.1415%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.15%)</title><rect x="0.8915%" y="340" width="0.1486%" height="15" fill="rgb(238,167,29)"/><text x="1.1415%" y="350.50"></text></g><g><title>&lt;module&gt; (json\__init__.py:106) (3 samples, 0.15%)</title><rect x="0.8915%" y="356" width="0.1486%" height="15" fill="rgb(232,182,51)"/><text x="1.1415%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (3 samples, 0.15%)</title><rect x="0.8915%" y="372" width="0.1486%" height="15" fill="rgb(231,60,39)"/><text x="1.1415%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (3 samples, 0.15%)</title><rect x="0.8915%" y="388" width="0.1486%" height="15" fill="rgb(208,69,12)"/><text x="1.1415%" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (3 samples, 0.15%)</title><rect x="0.8915%" y="404" width="0.1486%" height="15" fill="rgb(235,93,37)"/><text x="1.1415%" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:848) (3 samples, 0.15%)</title><rect x="0.8915%" y="420" width="0.1486%" height="15" fill="rgb(213,116,39)"/><text x="1.1415%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.15%)</title><rect x="0.8915%" y="436" width="0.1486%" height="15" fill="rgb(222,207,29)"/><text x="1.1415%" y="446.50"></text></g><g><title>&lt;module&gt; (json\decoder.py:5) (3 samples, 0.15%)</title><rect x="0.8915%" y="452" width="0.1486%" height="15" fill="rgb(206,96,30)"/><text x="1.1415%" y="462.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1042) (3 samples, 0.15%)</title><rect x="0.8915%" y="468" width="0.1486%" height="15" fill="rgb(218,138,4)"/><text x="1.1415%" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.15%)</title><rect x="0.8915%" y="484" width="0.1486%" height="15" fill="rgb(250,191,14)"/><text x="1.1415%" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (3 samples, 0.15%)</title><rect x="0.8915%" y="500" width="0.1486%" height="15" fill="rgb(239,60,40)"/><text x="1.1415%" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:971) (3 samples, 0.15%)</title><rect x="0.8915%" y="516" width="0.1486%" height="15" fill="rgb(206,27,48)"/><text x="1.1415%" y="526.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:914) (3 samples, 0.15%)</title><rect x="0.8915%" y="532" width="0.1486%" height="15" fill="rgb(225,35,8)"/><text x="1.1415%" y="542.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1407) (3 samples, 0.15%)</title><rect x="0.8915%" y="548" width="0.1486%" height="15" fill="rgb(250,213,24)"/><text x="1.1415%" y="558.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1379) (3 samples, 0.15%)</title><rect x="0.8915%" y="564" width="0.1486%" height="15" fill="rgb(247,123,22)"/><text x="1.1415%" y="574.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1506) (3 samples, 0.15%)</title><rect x="0.8915%" y="580" width="0.1486%" height="15" fill="rgb(231,138,38)"/><text x="1.1415%" y="590.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:142) (3 samples, 0.15%)</title><rect x="0.8915%" y="596" width="0.1486%" height="15" fill="rgb(231,145,46)"/><text x="1.1415%" y="606.50"></text></g><g><title>&lt;module&gt; (numpy\core\overrides.py:7) (3 samples, 0.15%)</title><rect x="1.1887%" y="548" width="0.1486%" height="15" fill="rgb(251,118,11)"/><text x="1.4387%" y="558.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (3 samples, 0.15%)</title><rect x="1.1887%" y="564" width="0.1486%" height="15" fill="rgb(217,147,25)"/><text x="1.4387%" y="574.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (3 samples, 0.15%)</title><rect x="1.1887%" y="580" width="0.1486%" height="15" fill="rgb(247,81,37)"/><text x="1.4387%" y="590.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:657) (3 samples, 0.15%)</title><rect x="1.1887%" y="596" width="0.1486%" height="15" fill="rgb(209,12,38)"/><text x="1.4387%" y="606.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:556) (3 samples, 0.15%)</title><rect x="1.1887%" y="612" width="0.1486%" height="15" fill="rgb(227,1,9)"/><text x="1.4387%" y="622.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1166) (3 samples, 0.15%)</title><rect x="1.1887%" y="628" width="0.1486%" height="15" fill="rgb(248,47,43)"/><text x="1.4387%" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.15%)</title><rect x="1.1887%" y="644" width="0.1486%" height="15" fill="rgb(221,10,30)"/><text x="1.4387%" y="654.50"></text></g><g><title>&lt;module&gt; (numpy\compat\py3k.py:21) (5 samples, 0.25%)</title><rect x="1.3373%" y="820" width="0.2476%" height="15" fill="rgb(210,229,1)"/><text x="1.5873%" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (5 samples, 0.25%)</title><rect x="1.3373%" y="836" width="0.2476%" height="15" fill="rgb(222,148,37)"/><text x="1.5873%" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (4 samples, 0.20%)</title><rect x="1.3868%" y="852" width="0.1981%" height="15" fill="rgb(234,67,33)"/><text x="1.6368%" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (4 samples, 0.20%)</title><rect x="1.3868%" y="868" width="0.1981%" height="15" fill="rgb(247,98,35)"/><text x="1.6368%" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:848) (3 samples, 0.15%)</title><rect x="1.4364%" y="884" width="0.1486%" height="15" fill="rgb(247,138,52)"/><text x="1.6864%" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.15%)</title><rect x="1.4364%" y="900" width="0.1486%" height="15" fill="rgb(213,79,30)"/><text x="1.6864%" y="910.50"></text></g><g><title>&lt;module&gt; (numpy\compat\py3k.py:28) (4 samples, 0.20%)</title><rect x="1.5849%" y="820" width="0.1981%" height="15" fill="rgb(246,177,23)"/><text x="1.8349%" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (4 samples, 0.20%)</title><rect x="1.5849%" y="836" width="0.1981%" height="15" fill="rgb(230,62,27)"/><text x="1.8349%" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:971) (4 samples, 0.20%)</title><rect x="1.5849%" y="852" width="0.1981%" height="15" fill="rgb(216,154,8)"/><text x="1.8349%" y="862.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:914) (4 samples, 0.20%)</title><rect x="1.5849%" y="868" width="0.1981%" height="15" fill="rgb(244,35,45)"/><text x="1.8349%" y="878.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1407) (4 samples, 0.20%)</title><rect x="1.5849%" y="884" width="0.1981%" height="15" fill="rgb(251,115,12)"/><text x="1.8349%" y="894.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1379) (4 samples, 0.20%)</title><rect x="1.5849%" y="900" width="0.1981%" height="15" fill="rgb(240,54,50)"/><text x="1.8349%" y="910.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1506) (4 samples, 0.20%)</title><rect x="1.5849%" y="916" width="0.1981%" height="15" fill="rgb(233,84,52)"/><text x="1.8349%" y="926.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:142) (4 samples, 0.20%)</title><rect x="1.5849%" y="932" width="0.1981%" height="15" fill="rgb(207,117,47)"/><text x="1.8349%" y="942.50"></text></g><g><title>&lt;module&gt; (numpy\core\multiarray.py:12) (18 samples, 0.89%)</title><rect x="1.1887%" y="420" width="0.8915%" height="15" fill="rgb(249,43,39)"/><text x="1.4387%" y="430.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1042) (18 samples, 0.89%)</title><rect x="1.1887%" y="436" width="0.8915%" height="15" fill="rgb(209,38,44)"/><text x="1.4387%" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (18 samples, 0.89%)</title><rect x="1.1887%" y="452" width="0.8915%" height="15" fill="rgb(236,212,23)"/><text x="1.4387%" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (18 samples, 0.89%)</title><rect x="1.1887%" y="468" width="0.8915%" height="15" fill="rgb(242,79,21)"/><text x="1.4387%" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (18 samples, 0.89%)</title><rect x="1.1887%" y="484" width="0.8915%" height="15" fill="rgb(211,96,35)"/><text x="1.4387%" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (18 samples, 0.89%)</title><rect x="1.1887%" y="500" width="0.8915%" height="15" fill="rgb(253,215,40)"/><text x="1.4387%" y="510.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:848) (18 samples, 0.89%)</title><rect x="1.1887%" y="516" width="0.8915%" height="15" fill="rgb(211,81,21)"/><text x="1.4387%" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (18 samples, 0.89%)</title><rect x="1.1887%" y="532" width="0.8915%" height="15" fill="rgb(208,190,38)"/><text x="1.4387%" y="542.50"></text></g><g><title>&lt;module&gt; (numpy\core\overrides.py:9) (15 samples, 0.74%)</title><rect x="1.3373%" y="548" width="0.7429%" height="15" fill="rgb(235,213,38)"/><text x="1.5873%" y="558.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (15 samples, 0.74%)</title><rect x="1.3373%" y="564" width="0.7429%" height="15" fill="rgb(237,122,38)"/><text x="1.5873%" y="574.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:961) (15 samples, 0.74%)</title><rect x="1.3373%" y="580" width="0.7429%" height="15" fill="rgb(244,218,35)"/><text x="1.5873%" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (15 samples, 0.74%)</title><rect x="1.3373%" y="596" width="0.7429%" height="15" fill="rgb(240,68,47)"/><text x="1.5873%" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (15 samples, 0.74%)</title><rect x="1.3373%" y="612" width="0.7429%" height="15" fill="rgb(210,16,53)"/><text x="1.5873%" y="622.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (15 samples, 0.74%)</title><rect x="1.3373%" y="628" width="0.7429%" height="15" fill="rgb(235,124,12)"/><text x="1.5873%" y="638.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (15 samples, 0.74%)</title><rect x="1.3373%" y="644" width="0.7429%" height="15" fill="rgb(224,169,11)"/><text x="1.5873%" y="654.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:848) (15 samples, 0.74%)</title><rect x="1.3373%" y="660" width="0.7429%" height="15" fill="rgb(250,166,2)"/><text x="1.5873%" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (15 samples, 0.74%)</title><rect x="1.3373%" y="676" width="0.7429%" height="15" fill="rgb(242,216,29)"/><text x="1.5873%" y="686.50"></text></g><g><title>&lt;module&gt; (numpy\compat\__init__.py:12) (15 samples, 0.74%)</title><rect x="1.3373%" y="692" width="0.7429%" height="15" fill="rgb(230,116,27)"/><text x="1.5873%" y="702.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1042) (15 samples, 0.74%)</title><rect x="1.3373%" y="708" width="0.7429%" height="15" fill="rgb(228,99,48)"/><text x="1.5873%" y="718.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (15 samples, 0.74%)</title><rect x="1.3373%" y="724" width="0.7429%" height="15" fill="rgb(253,11,6)"/><text x="1.5873%" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (15 samples, 0.74%)</title><rect x="1.3373%" y="740" width="0.7429%" height="15" fill="rgb(247,143,39)"/><text x="1.5873%" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (15 samples, 0.74%)</title><rect x="1.3373%" y="756" width="0.7429%" height="15" fill="rgb(236,97,10)"/><text x="1.5873%" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (15 samples, 0.74%)</title><rect x="1.3373%" y="772" width="0.7429%" height="15" fill="rgb(233,208,19)"/><text x="1.5873%" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:848) (15 samples, 0.74%)</title><rect x="1.3373%" y="788" width="0.7429%" height="15" fill="rgb(216,164,2)"/><text x="1.5873%" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (15 samples, 0.74%)</title><rect x="1.3373%" y="804" width="0.7429%" height="15" fill="rgb(220,129,5)"/><text x="1.5873%" y="814.50"></text></g><g><title>&lt;module&gt; (numpy\compat\py3k.py:30) (6 samples, 0.30%)</title><rect x="1.7831%" y="820" width="0.2972%" height="15" fill="rgb(242,17,10)"/><text x="2.0331%" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (6 samples, 0.30%)</title><rect x="1.7831%" y="836" width="0.2972%" height="15" fill="rgb(242,107,0)"/><text x="2.0331%" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (6 samples, 0.30%)</title><rect x="1.7831%" y="852" width="0.2972%" height="15" fill="rgb(251,28,31)"/><text x="2.0331%" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (6 samples, 0.30%)</title><rect x="1.7831%" y="868" width="0.2972%" height="15" fill="rgb(233,223,10)"/><text x="2.0331%" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:848) (6 samples, 0.30%)</title><rect x="1.7831%" y="884" width="0.2972%" height="15" fill="rgb(215,21,27)"/><text x="2.0331%" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.30%)</title><rect x="1.7831%" y="900" width="0.2972%" height="15" fill="rgb(232,23,21)"/><text x="2.0331%" y="910.50"></text></g><g><title>&lt;module&gt; (pickle.py:37) (4 samples, 0.20%)</title><rect x="1.8821%" y="916" width="0.1981%" height="15" fill="rgb(244,5,23)"/><text x="2.1321%" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (4 samples, 0.20%)</title><rect x="1.8821%" y="932" width="0.1981%" height="15" fill="rgb(226,81,46)"/><text x="2.1321%" y="942.50"></text></g><g><title>&lt;module&gt; (numpy\core\__init__.py:22) (19 samples, 0.94%)</title><rect x="1.1887%" y="292" width="0.9411%" height="15" fill="rgb(247,70,30)"/><text x="1.4387%" y="302.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1042) (19 samples, 0.94%)</title><rect x="1.1887%" y="308" width="0.9411%" height="15" fill="rgb(212,68,19)"/><text x="1.4387%" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (19 samples, 0.94%)</title><rect x="1.1887%" y="324" width="0.9411%" height="15" fill="rgb(240,187,13)"/><text x="1.4387%" y="334.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (19 samples, 0.94%)</title><rect x="1.1887%" y="340" width="0.9411%" height="15" fill="rgb(223,113,26)"/><text x="1.4387%" y="350.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (19 samples, 0.94%)</title><rect x="1.1887%" y="356" width="0.9411%" height="15" fill="rgb(206,192,2)"/><text x="1.4387%" y="366.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (19 samples, 0.94%)</title><rect x="1.1887%" y="372" width="0.9411%" height="15" fill="rgb(241,108,4)"/><text x="1.4387%" y="382.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:848) (19 samples, 0.94%)</title><rect x="1.1887%" y="388" width="0.9411%" height="15" fill="rgb(247,173,49)"/><text x="1.4387%" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (19 samples, 0.94%)</title><rect x="1.1887%" y="404" width="0.9411%" height="15" fill="rgb(224,114,35)"/><text x="1.4387%" y="414.50"></text></g><g><title>&lt;module&gt; (numpy\core\__init__.py:70) (3 samples, 0.15%)</title><rect x="2.1298%" y="292" width="0.1486%" height="15" fill="rgb(245,159,27)"/><text x="2.3798%" y="302.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1042) (3 samples, 0.15%)</title><rect x="2.1298%" y="308" width="0.1486%" height="15" fill="rgb(245,172,44)"/><text x="2.3798%" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.15%)</title><rect x="2.1298%" y="324" width="0.1486%" height="15" fill="rgb(236,23,11)"/><text x="2.3798%" y="334.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (3 samples, 0.15%)</title><rect x="2.1298%" y="340" width="0.1486%" height="15" fill="rgb(205,117,38)"/><text x="2.3798%" y="350.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (3 samples, 0.15%)</title><rect x="2.1298%" y="356" width="0.1486%" height="15" fill="rgb(237,72,25)"/><text x="2.3798%" y="366.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (3 samples, 0.15%)</title><rect x="2.1298%" y="372" width="0.1486%" height="15" fill="rgb(244,70,9)"/><text x="2.3798%" y="382.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:848) (3 samples, 0.15%)</title><rect x="2.1298%" y="388" width="0.1486%" height="15" fill="rgb(217,125,39)"/><text x="2.3798%" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.15%)</title><rect x="2.1298%" y="404" width="0.1486%" height="15" fill="rgb(235,36,10)"/><text x="2.3798%" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:971) (3 samples, 0.15%)</title><rect x="2.5755%" y="628" width="0.1486%" height="15" fill="rgb(251,123,47)"/><text x="2.8255%" y="638.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:914) (3 samples, 0.15%)</title><rect x="2.5755%" y="644" width="0.1486%" height="15" fill="rgb(221,13,13)"/><text x="2.8255%" y="654.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1407) (3 samples, 0.15%)</title><rect x="2.5755%" y="660" width="0.1486%" height="15" fill="rgb(238,131,9)"/><text x="2.8255%" y="670.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1379) (3 samples, 0.15%)</title><rect x="2.5755%" y="676" width="0.1486%" height="15" fill="rgb(211,50,8)"/><text x="2.8255%" y="686.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1506) (3 samples, 0.15%)</title><rect x="2.5755%" y="692" width="0.1486%" height="15" fill="rgb(245,182,24)"/><text x="2.8255%" y="702.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:142) (3 samples, 0.15%)</title><rect x="2.5755%" y="708" width="0.1486%" height="15" fill="rgb(242,14,37)"/><text x="2.8255%" y="718.50"></text></g><g><title>&lt;module&gt; (socket.py:52) (5 samples, 0.25%)</title><rect x="2.5755%" y="596" width="0.2476%" height="15" fill="rgb(246,228,12)"/><text x="2.8255%" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (5 samples, 0.25%)</title><rect x="2.5755%" y="612" width="0.2476%" height="15" fill="rgb(213,55,15)"/><text x="2.8255%" y="622.50"></text></g><g><title>uname (platform.py:785) (10 samples, 0.50%)</title><rect x="2.4269%" y="484" width="0.4953%" height="15" fill="rgb(209,9,3)"/><text x="2.6769%" y="494.50"></text></g><g><title>_node (platform.py:588) (10 samples, 0.50%)</title><rect x="2.4269%" y="500" width="0.4953%" height="15" fill="rgb(230,59,30)"/><text x="2.6769%" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (10 samples, 0.50%)</title><rect x="2.4269%" y="516" width="0.4953%" height="15" fill="rgb(209,121,21)"/><text x="2.6769%" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (9 samples, 0.45%)</title><rect x="2.4765%" y="532" width="0.4458%" height="15" fill="rgb(220,109,13)"/><text x="2.7265%" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (9 samples, 0.45%)</title><rect x="2.4765%" y="548" width="0.4458%" height="15" fill="rgb(232,18,1)"/><text x="2.7265%" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:848) (9 samples, 0.45%)</title><rect x="2.4765%" y="564" width="0.4458%" height="15" fill="rgb(215,41,42)"/><text x="2.7265%" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 0.45%)</title><rect x="2.4765%" y="580" width="0.4458%" height="15" fill="rgb(224,123,36)"/><text x="2.7265%" y="590.50"></text></g><g><title>&lt;module&gt; (numpy\core\_add_newdocs_scalars.py:87) (16 samples, 0.79%)</title><rect x="2.4269%" y="420" width="0.7925%" height="15" fill="rgb(240,125,3)"/><text x="2.6769%" y="430.50"></text></g><g><title>add_newdoc_for_scalar_type (numpy\core\_add_newdocs_scalars.py:62) (16 samples, 0.79%)</title><rect x="2.4269%" y="436" width="0.7925%" height="15" fill="rgb(205,98,50)"/><text x="2.6769%" y="446.50"></text></g><g><title>&lt;genexpr&gt; (numpy\core\_add_newdocs_scalars.py:62) (16 samples, 0.79%)</title><rect x="2.4269%" y="452" width="0.7925%" height="15" fill="rgb(205,185,37)"/><text x="2.6769%" y="462.50"></text></g><g><title>system (platform.py:897) (16 samples, 0.79%)</title><rect x="2.4269%" y="468" width="0.7925%" height="15" fill="rgb(238,207,15)"/><text x="2.6769%" y="478.50"></text></g><g><title>uname (platform.py:792) (6 samples, 0.30%)</title><rect x="2.9222%" y="484" width="0.2972%" height="15" fill="rgb(213,199,42)"/><text x="3.1722%" y="494.50"></text></g><g><title>win32_ver (platform.py:364) (6 samples, 0.30%)</title><rect x="2.9222%" y="500" width="0.2972%" height="15" fill="rgb(235,201,11)"/><text x="3.1722%" y="510.50"></text></g><g><title>_syscmd_ver (platform.py:279) (4 samples, 0.20%)</title><rect x="3.0213%" y="516" width="0.1981%" height="15" fill="rgb(207,46,11)"/><text x="3.2713%" y="526.50"></text></g><g><title>check_output (subprocess.py:415) (4 samples, 0.20%)</title><rect x="3.0213%" y="532" width="0.1981%" height="15" fill="rgb(241,35,35)"/><text x="3.2713%" y="542.50"></text></g><g><title>run (subprocess.py:495) (4 samples, 0.20%)</title><rect x="3.0213%" y="548" width="0.1981%" height="15" fill="rgb(243,32,47)"/><text x="3.2713%" y="558.50"></text></g><g><title>communicate (subprocess.py:1015) (4 samples, 0.20%)</title><rect x="3.0213%" y="564" width="0.1981%" height="15" fill="rgb(247,202,23)"/><text x="3.2713%" y="574.50"></text></g><g><title>&lt;module&gt; (numpy\__init__.py:150) (45 samples, 2.23%)</title><rect x="1.0401%" y="164" width="2.2288%" height="15" fill="rgb(219,102,11)"/><text x="1.2901%" y="174.50">&lt;..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1042) (45 samples, 2.23%)</title><rect x="1.0401%" y="180" width="2.2288%" height="15" fill="rgb(243,110,44)"/><text x="1.2901%" y="190.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (45 samples, 2.23%)</title><rect x="1.0401%" y="196" width="2.2288%" height="15" fill="rgb(222,74,54)"/><text x="1.2901%" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (45 samples, 2.23%)</title><rect x="1.0401%" y="212" width="2.2288%" height="15" fill="rgb(216,99,12)"/><text x="1.2901%" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (45 samples, 2.23%)</title><rect x="1.0401%" y="228" width="2.2288%" height="15" fill="rgb(226,22,26)"/><text x="1.2901%" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (45 samples, 2.23%)</title><rect x="1.0401%" y="244" width="2.2288%" height="15" fill="rgb(217,163,10)"/><text x="1.2901%" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:848) (45 samples, 2.23%)</title><rect x="1.0401%" y="260" width="2.2288%" height="15" fill="rgb(213,25,53)"/><text x="1.2901%" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (45 samples, 2.23%)</title><rect x="1.0401%" y="276" width="2.2288%" height="15" fill="rgb(252,105,26)"/><text x="1.2901%" y="286.50">_..</text></g><g><title>&lt;module&gt; (numpy\core\__init__.py:99) (17 samples, 0.84%)</title><rect x="2.4269%" y="292" width="0.8420%" height="15" fill="rgb(220,39,43)"/><text x="2.6769%" y="302.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1042) (17 samples, 0.84%)</title><rect x="2.4269%" y="308" width="0.8420%" height="15" fill="rgb(229,68,48)"/><text x="2.6769%" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (17 samples, 0.84%)</title><rect x="2.4269%" y="324" width="0.8420%" height="15" fill="rgb(252,8,32)"/><text x="2.6769%" y="334.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (17 samples, 0.84%)</title><rect x="2.4269%" y="340" width="0.8420%" height="15" fill="rgb(223,20,43)"/><text x="2.6769%" y="350.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (17 samples, 0.84%)</title><rect x="2.4269%" y="356" width="0.8420%" height="15" fill="rgb(229,81,49)"/><text x="2.6769%" y="366.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (17 samples, 0.84%)</title><rect x="2.4269%" y="372" width="0.8420%" height="15" fill="rgb(236,28,36)"/><text x="2.6769%" y="382.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:848) (17 samples, 0.84%)</title><rect x="2.4269%" y="388" width="0.8420%" height="15" fill="rgb(249,185,26)"/><text x="2.6769%" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (17 samples, 0.84%)</title><rect x="2.4269%" y="404" width="0.8420%" height="15" fill="rgb(249,174,33)"/><text x="2.6769%" y="414.50"></text></g><g><title>&lt;module&gt; (numpy\__init__.py:153) (5 samples, 0.25%)</title><rect x="3.2689%" y="164" width="0.2476%" height="15" fill="rgb(233,201,37)"/><text x="3.5189%" y="174.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1042) (5 samples, 0.25%)</title><rect x="3.2689%" y="180" width="0.2476%" height="15" fill="rgb(221,78,26)"/><text x="3.5189%" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.25%)</title><rect x="3.2689%" y="196" width="0.2476%" height="15" fill="rgb(250,127,30)"/><text x="3.5189%" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (5 samples, 0.25%)</title><rect x="3.2689%" y="212" width="0.2476%" height="15" fill="rgb(230,49,44)"/><text x="3.5189%" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (5 samples, 0.25%)</title><rect x="3.2689%" y="228" width="0.2476%" height="15" fill="rgb(229,67,23)"/><text x="3.5189%" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (5 samples, 0.25%)</title><rect x="3.2689%" y="244" width="0.2476%" height="15" fill="rgb(249,83,47)"/><text x="3.5189%" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:848) (4 samples, 0.20%)</title><rect x="3.3185%" y="260" width="0.1981%" height="15" fill="rgb(215,43,3)"/><text x="3.5685%" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.20%)</title><rect x="3.3185%" y="276" width="0.1981%" height="15" fill="rgb(238,154,13)"/><text x="3.5685%" y="286.50"></text></g><g><title>&lt;module&gt; (numpy\lib\__init__.py:25) (4 samples, 0.20%)</title><rect x="3.3185%" y="292" width="0.1981%" height="15" fill="rgb(219,56,2)"/><text x="3.5685%" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (4 samples, 0.20%)</title><rect x="3.3185%" y="308" width="0.1981%" height="15" fill="rgb(233,0,4)"/><text x="3.5685%" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (4 samples, 0.20%)</title><rect x="3.3185%" y="324" width="0.1981%" height="15" fill="rgb(235,30,7)"/><text x="3.5685%" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (4 samples, 0.20%)</title><rect x="3.3185%" y="340" width="0.1981%" height="15" fill="rgb(250,79,13)"/><text x="3.5685%" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:848) (4 samples, 0.20%)</title><rect x="3.3185%" y="356" width="0.1981%" height="15" fill="rgb(211,146,34)"/><text x="3.5685%" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.20%)</title><rect x="3.3185%" y="372" width="0.1981%" height="15" fill="rgb(228,22,38)"/><text x="3.5685%" y="382.50"></text></g><g><title>&lt;module&gt; (numpy\lib\index_tricks.py:12) (4 samples, 0.20%)</title><rect x="3.3185%" y="388" width="0.1981%" height="15" fill="rgb(235,168,5)"/><text x="3.5685%" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (4 samples, 0.20%)</title><rect x="3.3185%" y="404" width="0.1981%" height="15" fill="rgb(221,155,16)"/><text x="3.5685%" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (4 samples, 0.20%)</title><rect x="3.3185%" y="420" width="0.1981%" height="15" fill="rgb(215,215,53)"/><text x="3.5685%" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (3 samples, 0.15%)</title><rect x="3.3680%" y="436" width="0.1486%" height="15" fill="rgb(223,4,10)"/><text x="3.6180%" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:848) (3 samples, 0.15%)</title><rect x="3.3680%" y="452" width="0.1486%" height="15" fill="rgb(234,103,6)"/><text x="3.6180%" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.15%)</title><rect x="3.3680%" y="468" width="0.1486%" height="15" fill="rgb(227,97,0)"/><text x="3.6180%" y="478.50"></text></g><g><title>&lt;module&gt; (numpy\matrixlib\__init__.py:4) (3 samples, 0.15%)</title><rect x="3.3680%" y="484" width="0.1486%" height="15" fill="rgb(234,150,53)"/><text x="3.6180%" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (3 samples, 0.15%)</title><rect x="3.3680%" y="500" width="0.1486%" height="15" fill="rgb(228,201,54)"/><text x="3.6180%" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (3 samples, 0.15%)</title><rect x="3.3680%" y="516" width="0.1486%" height="15" fill="rgb(222,22,37)"/><text x="3.6180%" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (3 samples, 0.15%)</title><rect x="3.3680%" y="532" width="0.1486%" height="15" fill="rgb(237,53,32)"/><text x="3.6180%" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:848) (3 samples, 0.15%)</title><rect x="3.3680%" y="548" width="0.1486%" height="15" fill="rgb(233,25,53)"/><text x="3.6180%" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.15%)</title><rect x="3.3680%" y="564" width="0.1486%" height="15" fill="rgb(210,40,34)"/><text x="3.6180%" y="574.50"></text></g><g><title>&lt;module&gt; (numpy\matrixlib\defmatrix.py:11) (3 samples, 0.15%)</title><rect x="3.3680%" y="580" width="0.1486%" height="15" fill="rgb(241,220,44)"/><text x="3.6180%" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (3 samples, 0.15%)</title><rect x="3.3680%" y="596" width="0.1486%" height="15" fill="rgb(235,28,35)"/><text x="3.6180%" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (3 samples, 0.15%)</title><rect x="3.3680%" y="612" width="0.1486%" height="15" fill="rgb(210,56,17)"/><text x="3.6180%" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (3 samples, 0.15%)</title><rect x="3.3680%" y="628" width="0.1486%" height="15" fill="rgb(224,130,29)"/><text x="3.6180%" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:848) (3 samples, 0.15%)</title><rect x="3.3680%" y="644" width="0.1486%" height="15" fill="rgb(235,212,8)"/><text x="3.6180%" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.15%)</title><rect x="3.3680%" y="660" width="0.1486%" height="15" fill="rgb(223,33,50)"/><text x="3.6180%" y="670.50"></text></g><g><title>&lt;module&gt; (numpy\linalg\__init__.py:73) (3 samples, 0.15%)</title><rect x="3.3680%" y="676" width="0.1486%" height="15" fill="rgb(219,149,13)"/><text x="3.6180%" y="686.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1042) (3 samples, 0.15%)</title><rect x="3.3680%" y="692" width="0.1486%" height="15" fill="rgb(250,156,29)"/><text x="3.6180%" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.15%)</title><rect x="3.3680%" y="708" width="0.1486%" height="15" fill="rgb(216,193,19)"/><text x="3.6180%" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (3 samples, 0.15%)</title><rect x="3.3680%" y="724" width="0.1486%" height="15" fill="rgb(216,135,14)"/><text x="3.6180%" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (3 samples, 0.15%)</title><rect x="3.3680%" y="740" width="0.1486%" height="15" fill="rgb(241,47,5)"/><text x="3.6180%" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (3 samples, 0.15%)</title><rect x="3.3680%" y="756" width="0.1486%" height="15" fill="rgb(233,42,35)"/><text x="3.6180%" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:848) (3 samples, 0.15%)</title><rect x="3.3680%" y="772" width="0.1486%" height="15" fill="rgb(231,13,6)"/><text x="3.6180%" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.15%)</title><rect x="3.3680%" y="788" width="0.1486%" height="15" fill="rgb(207,181,40)"/><text x="3.6180%" y="798.50"></text></g><g><title>&lt;module&gt; (numpy\linalg\linalg.py:32) (3 samples, 0.15%)</title><rect x="3.3680%" y="804" width="0.1486%" height="15" fill="rgb(254,173,49)"/><text x="3.6180%" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (3 samples, 0.15%)</title><rect x="3.3680%" y="820" width="0.1486%" height="15" fill="rgb(221,1,38)"/><text x="3.6180%" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (3 samples, 0.15%)</title><rect x="3.3680%" y="836" width="0.1486%" height="15" fill="rgb(206,124,46)"/><text x="3.6180%" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (3 samples, 0.15%)</title><rect x="3.3680%" y="852" width="0.1486%" height="15" fill="rgb(249,21,11)"/><text x="3.6180%" y="862.50"></text></g><g><title>&lt;module&gt; (numpy\__init__.py:161) (3 samples, 0.15%)</title><rect x="3.6157%" y="164" width="0.1486%" height="15" fill="rgb(222,201,40)"/><text x="3.8657%" y="174.50"></text></g><g><title>&lt;module&gt; (easy21.py:3) (64 samples, 3.17%)</title><rect x="0.6934%" y="68" width="3.1699%" height="15" fill="rgb(235,61,29)"/><text x="0.9434%" y="78.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (64 samples, 3.17%)</title><rect x="0.6934%" y="84" width="3.1699%" height="15" fill="rgb(219,207,3)"/><text x="0.9434%" y="94.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (62 samples, 3.07%)</title><rect x="0.7925%" y="100" width="3.0708%" height="15" fill="rgb(222,56,46)"/><text x="1.0425%" y="110.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (62 samples, 3.07%)</title><rect x="0.7925%" y="116" width="3.0708%" height="15" fill="rgb(239,76,54)"/><text x="1.0425%" y="126.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:848) (62 samples, 3.07%)</title><rect x="0.7925%" y="132" width="3.0708%" height="15" fill="rgb(231,124,27)"/><text x="1.0425%" y="142.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (62 samples, 3.07%)</title><rect x="0.7925%" y="148" width="3.0708%" height="15" fill="rgb(249,195,6)"/><text x="1.0425%" y="158.50">_ca..</text></g><g><title>monte_carlo (mc.py:26) (5 samples, 0.25%)</title><rect x="4.0119%" y="164" width="0.2476%" height="15" fill="rgb(237,174,47)"/><text x="4.2619%" y="174.50"></text></g><g><title>get_new_card (environment.py:33) (59 samples, 2.92%)</title><rect x="5.2501%" y="196" width="2.9222%" height="15" fill="rgb(206,201,31)"/><text x="5.5001%" y="206.50">ge..</text></g><g><title>get_new_card (environment.py:34) (60 samples, 2.97%)</title><rect x="8.1724%" y="196" width="2.9718%" height="15" fill="rgb(231,57,52)"/><text x="8.4224%" y="206.50">get..</text></g><g><title>get_initial_state (environment.py:41) (135 samples, 6.69%)</title><rect x="4.6558%" y="180" width="6.6865%" height="15" fill="rgb(248,177,22)"/><text x="4.9058%" y="190.50">get_initi..</text></g><g><title>get_new_card (environment.py:36) (4 samples, 0.20%)</title><rect x="11.1441%" y="196" width="0.1981%" height="15" fill="rgb(215,211,37)"/><text x="11.3941%" y="206.50"></text></g><g><title>get_new_card (environment.py:33) (39 samples, 1.93%)</title><rect x="11.5404%" y="196" width="1.9316%" height="15" fill="rgb(241,128,51)"/><text x="11.7904%" y="206.50">g..</text></g><g><title>get_new_card (environment.py:34) (51 samples, 2.53%)</title><rect x="13.4720%" y="196" width="2.5260%" height="15" fill="rgb(227,165,31)"/><text x="13.7220%" y="206.50">ge..</text></g><g><title>monte_carlo (mc.py:29) (238 samples, 11.79%)</title><rect x="4.2595%" y="164" width="11.7880%" height="15" fill="rgb(228,167,24)"/><text x="4.5095%" y="174.50">monte_carlo (mc.p..</text></g><g><title>get_initial_state (environment.py:42) (95 samples, 4.71%)</title><rect x="11.3422%" y="180" width="4.7053%" height="15" fill="rgb(228,143,12)"/><text x="11.5922%" y="190.50">get_i..</text></g><g><title>step (environment.py:52) (11 samples, 0.54%)</title><rect x="16.5428%" y="196" width="0.5448%" height="15" fill="rgb(249,149,8)"/><text x="16.7928%" y="206.50"></text></g><g><title>get_new_card (environment.py:33) (24 samples, 1.19%)</title><rect x="17.1372%" y="212" width="1.1887%" height="15" fill="rgb(243,35,44)"/><text x="17.3872%" y="222.50"></text></g><g><title>step (environment.py:53) (43 samples, 2.13%)</title><rect x="17.0877%" y="196" width="2.1298%" height="15" fill="rgb(246,89,9)"/><text x="17.3377%" y="206.50">s..</text></g><g><title>get_new_card (environment.py:34) (18 samples, 0.89%)</title><rect x="18.3259%" y="212" width="0.8915%" height="15" fill="rgb(233,213,13)"/><text x="18.5759%" y="222.50"></text></g><g><title>step (environment.py:54) (3 samples, 0.15%)</title><rect x="19.2174%" y="196" width="0.1486%" height="15" fill="rgb(233,141,41)"/><text x="19.4674%" y="206.50"></text></g><g><title>step (environment.py:60) (3 samples, 0.15%)</title><rect x="19.4156%" y="196" width="0.1486%" height="15" fill="rgb(239,167,4)"/><text x="19.6656%" y="206.50"></text></g><g><title>step (environment.py:63) (3 samples, 0.15%)</title><rect x="19.5641%" y="196" width="0.1486%" height="15" fill="rgb(209,217,16)"/><text x="19.8141%" y="206.50"></text></g><g><title>get_new_card (environment.py:33) (103 samples, 5.10%)</title><rect x="20.2080%" y="212" width="5.1015%" height="15" fill="rgb(219,88,35)"/><text x="20.4580%" y="222.50">get_ne..</text></g><g><title>get_new_card (environment.py:34) (84 samples, 4.16%)</title><rect x="25.3096%" y="212" width="4.1605%" height="15" fill="rgb(220,193,23)"/><text x="25.5596%" y="222.50">get_n..</text></g><g><title>step (environment.py:64) (204 samples, 10.10%)</title><rect x="19.7127%" y="196" width="10.1040%" height="15" fill="rgb(230,90,52)"/><text x="19.9627%" y="206.50">step (environme..</text></g><g><title>get_new_card (environment.py:36) (7 samples, 0.35%)</title><rect x="29.4700%" y="212" width="0.3467%" height="15" fill="rgb(252,106,19)"/><text x="29.7200%" y="222.50"></text></g><g><title>step (environment.py:65) (12 samples, 0.59%)</title><rect x="29.8167%" y="196" width="0.5944%" height="15" fill="rgb(206,74,20)"/><text x="30.0667%" y="206.50"></text></g><g><title>step (environment.py:66) (3 samples, 0.15%)</title><rect x="30.4111%" y="196" width="0.1486%" height="15" fill="rgb(230,138,44)"/><text x="30.6611%" y="206.50"></text></g><g><title>episode (mc.py:10) (295 samples, 14.61%)</title><rect x="16.0971%" y="180" width="14.6112%" height="15" fill="rgb(235,182,43)"/><text x="16.3471%" y="190.50">episode (mc.py:10)</text></g><g><title>episode (mc.py:7) (7 samples, 0.35%)</title><rect x="30.8569%" y="180" width="0.3467%" height="15" fill="rgb(242,16,51)"/><text x="31.1069%" y="190.50"></text></g><g><title>monte_carlo (mc.py:30) (308 samples, 15.26%)</title><rect x="16.0475%" y="164" width="15.2551%" height="15" fill="rgb(248,9,4)"/><text x="16.2975%" y="174.50">monte_carlo (mc.py:30)</text></g><g><title>&lt;listcomp&gt; (mc.py:31) (8 samples, 0.40%)</title><rect x="32.5409%" y="180" width="0.3962%" height="15" fill="rgb(210,31,22)"/><text x="32.7909%" y="190.50"></text></g><g><title>_wrapit (numpy\core\fromnumeric.py:40) (14 samples, 0.69%)</title><rect x="34.4230%" y="228" width="0.6934%" height="15" fill="rgb(239,54,39)"/><text x="34.6730%" y="238.50"></text></g><g><title>_wrapit (numpy\core\fromnumeric.py:42) (5 samples, 0.25%)</title><rect x="35.1164%" y="228" width="0.2476%" height="15" fill="rgb(230,99,41)"/><text x="35.3664%" y="238.50"></text></g><g><title>_wrapit (numpy\core\fromnumeric.py:43) (61 samples, 3.02%)</title><rect x="35.3640%" y="228" width="3.0213%" height="15" fill="rgb(253,106,12)"/><text x="35.6140%" y="238.50">_wr..</text></g><g><title>monte_carlo (mc.py:31) (145 samples, 7.18%)</title><rect x="31.3026%" y="164" width="7.1818%" height="15" fill="rgb(213,46,41)"/><text x="31.5526%" y="174.50">monte_carl..</text></g><g><title>cumsum (&lt;__array_function__ internals&gt;:5) (110 samples, 5.45%)</title><rect x="33.0362%" y="180" width="5.4482%" height="15" fill="rgb(215,133,35)"/><text x="33.2862%" y="190.50">cumsum ..</text></g><g><title>cumsum (numpy\core\fromnumeric.py:2532) (103 samples, 5.10%)</title><rect x="33.3829%" y="196" width="5.1015%" height="15" fill="rgb(213,28,5)"/><text x="33.6329%" y="206.50">cumsum..</text></g><g><title>_wrapfunc (numpy\core\fromnumeric.py:54) (94 samples, 4.66%)</title><rect x="33.8286%" y="212" width="4.6558%" height="15" fill="rgb(215,77,49)"/><text x="34.0786%" y="222.50">_wrap..</text></g><g><title>monte_carlo (mc.py:34) (15 samples, 0.74%)</title><rect x="38.4844%" y="164" width="0.7429%" height="15" fill="rgb(248,100,22)"/><text x="38.7344%" y="174.50"></text></g><g><title>__get__ (types.py:176) (3 samples, 0.15%)</title><rect x="40.7628%" y="180" width="0.1486%" height="15" fill="rgb(208,67,9)"/><text x="41.0128%" y="190.50"></text></g><g><title>monte_carlo (mc.py:36) (38 samples, 1.88%)</title><rect x="39.2273%" y="164" width="1.8821%" height="15" fill="rgb(219,133,21)"/><text x="39.4773%" y="174.50">m..</text></g><g><title>__get__ (types.py:178) (4 samples, 0.20%)</title><rect x="40.9113%" y="180" width="0.1981%" height="15" fill="rgb(246,46,29)"/><text x="41.1613%" y="190.50"></text></g><g><title>monte_carlo (mc.py:37) (8 samples, 0.40%)</title><rect x="41.1095%" y="164" width="0.3962%" height="15" fill="rgb(246,185,52)"/><text x="41.3595%" y="174.50"></text></g><g><title>monte_carlo (mc.py:39) (17 samples, 0.84%)</title><rect x="41.5057%" y="164" width="0.8420%" height="15" fill="rgb(252,136,11)"/><text x="41.7557%" y="174.50"></text></g><g><title>__get__ (types.py:178) (3 samples, 0.15%)</title><rect x="42.1991%" y="180" width="0.1486%" height="15" fill="rgb(219,138,53)"/><text x="42.4491%" y="190.50"></text></g><g><title>__get__ (types.py:176) (3 samples, 0.15%)</title><rect x="46.9539%" y="180" width="0.1486%" height="15" fill="rgb(211,51,23)"/><text x="47.2039%" y="190.50"></text></g><g><title>monte_carlo (mc.py:40) (102 samples, 5.05%)</title><rect x="42.3477%" y="164" width="5.0520%" height="15" fill="rgb(247,221,28)"/><text x="42.5977%" y="174.50">monte_..</text></g><g><title>__get__ (types.py:178) (6 samples, 0.30%)</title><rect x="47.1025%" y="180" width="0.2972%" height="15" fill="rgb(251,222,45)"/><text x="47.3525%" y="190.50"></text></g><g><title>value (enum.py:756) (3 samples, 0.15%)</title><rect x="47.2511%" y="196" width="0.1486%" height="15" fill="rgb(217,162,53)"/><text x="47.5011%" y="206.50"></text></g><g><title>monte_carlo (mc.py:43) (3 samples, 0.15%)</title><rect x="47.3997%" y="164" width="0.1486%" height="15" fill="rgb(229,93,14)"/><text x="47.6497%" y="174.50"></text></g><g><title>&lt;genexpr&gt; (enum.py:393) (13 samples, 0.64%)</title><rect x="55.2749%" y="180" width="0.6439%" height="15" fill="rgb(209,67,49)"/><text x="55.5249%" y="190.50"></text></g><g><title>__iter__ (enum.py:393) (7 samples, 0.35%)</title><rect x="55.9188%" y="180" width="0.3467%" height="15" fill="rgb(213,87,29)"/><text x="56.1688%" y="190.50"></text></g><g><title>__len__ (enum.py:396) (5 samples, 0.25%)</title><rect x="56.2655%" y="180" width="0.2476%" height="15" fill="rgb(205,151,52)"/><text x="56.5155%" y="190.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:4) (3 samples, 0.15%)</title><rect x="56.5131%" y="180" width="0.1486%" height="15" fill="rgb(253,215,39)"/><text x="56.7631%" y="190.50"></text></g><g><title>monte_carlo (mc.py:49) (264 samples, 13.08%)</title><rect x="47.6969%" y="164" width="13.0758%" height="15" fill="rgb(221,220,41)"/><text x="47.9469%" y="174.50">monte_carlo (mc.py:4..</text></g><g><title>argmax (&lt;__array_function__ internals&gt;:5) (83 samples, 4.11%)</title><rect x="56.6617%" y="180" width="4.1109%" height="15" fill="rgb(218,133,21)"/><text x="56.9117%" y="190.50">argm..</text></g><g><title>argmax (numpy\core\fromnumeric.py:1195) (76 samples, 3.76%)</title><rect x="57.0084%" y="196" width="3.7642%" height="15" fill="rgb(221,193,43)"/><text x="57.2584%" y="206.50">argm..</text></g><g><title>_wrapfunc (numpy\core\fromnumeric.py:57) (63 samples, 3.12%)</title><rect x="57.6523%" y="212" width="3.1204%" height="15" fill="rgb(240,128,52)"/><text x="57.9023%" y="222.50">_wr..</text></g><g><title>monte_carlo (mc.py:50) (84 samples, 4.16%)</title><rect x="60.7727%" y="164" width="4.1605%" height="15" fill="rgb(253,114,12)"/><text x="61.0227%" y="174.50">monte..</text></g><g><title>monte_carlo (mc.py:51) (87 samples, 4.31%)</title><rect x="64.9331%" y="164" width="4.3091%" height="15" fill="rgb(215,223,47)"/><text x="65.1831%" y="174.50">monte..</text></g><g><title>&lt;genexpr&gt; (enum.py:393) (8 samples, 0.40%)</title><rect x="85.7850%" y="180" width="0.3962%" height="15" fill="rgb(248,225,23)"/><text x="86.0350%" y="190.50"></text></g><g><title>__iter__ (enum.py:393) (11 samples, 0.54%)</title><rect x="86.2308%" y="180" width="0.5448%" height="15" fill="rgb(250,108,0)"/><text x="86.4808%" y="190.50"></text></g><g><title>__len__ (enum.py:396) (6 samples, 0.30%)</title><rect x="86.7756%" y="180" width="0.2972%" height="15" fill="rgb(228,208,7)"/><text x="87.0256%" y="190.50"></text></g><g><title>count_nonzero (&lt;__array_function__ internals&gt;:4) (4 samples, 0.20%)</title><rect x="87.0728%" y="180" width="0.1981%" height="15" fill="rgb(244,45,10)"/><text x="87.3228%" y="190.50"></text></g><g><title>count_nonzero (&lt;__array_function__ internals&gt;:5) (25 samples, 1.24%)</title><rect x="87.2709%" y="180" width="1.2382%" height="15" fill="rgb(207,125,25)"/><text x="87.5209%" y="190.50"></text></g><g><title>count_nonzero (numpy\core\numeric.py:486) (11 samples, 0.54%)</title><rect x="87.9643%" y="196" width="0.5448%" height="15" fill="rgb(210,195,18)"/><text x="88.2143%" y="206.50"></text></g><g><title>prod (&lt;__array_function__ internals&gt;:4) (5 samples, 0.25%)</title><rect x="88.5092%" y="180" width="0.2476%" height="15" fill="rgb(249,80,12)"/><text x="88.7592%" y="190.50"></text></g><g><title>_wrapreduction (numpy\core\fromnumeric.py:70) (19 samples, 0.94%)</title><rect x="90.1932%" y="212" width="0.9411%" height="15" fill="rgb(221,65,9)"/><text x="90.4432%" y="222.50"></text></g><g><title>&lt;dictcomp&gt; (numpy\core\fromnumeric.py:71) (7 samples, 0.35%)</title><rect x="90.7875%" y="228" width="0.3467%" height="15" fill="rgb(235,49,36)"/><text x="91.0375%" y="238.50"></text></g><g><title>_wrapreduction (numpy\core\fromnumeric.py:73) (3 samples, 0.15%)</title><rect x="91.1342%" y="212" width="0.1486%" height="15" fill="rgb(225,32,20)"/><text x="91.3842%" y="222.50"></text></g><g><title>_wrapreduction (numpy\core\fromnumeric.py:75) (20 samples, 0.99%)</title><rect x="91.2828%" y="212" width="0.9906%" height="15" fill="rgb(215,141,46)"/><text x="91.5328%" y="222.50"></text></g><g><title>&lt;module&gt; (easy21.py:36) (1,862 samples, 92.22%)</title><rect x="3.8633%" y="68" width="92.2239%" height="15" fill="rgb(250,160,47)"/><text x="4.1133%" y="78.50">&lt;module&gt; (easy21.py:36)</text></g><g><title>timings (easy21.py:12) (1,862 samples, 92.22%)</title><rect x="3.8633%" y="84" width="92.2239%" height="15" fill="rgb(216,222,40)"/><text x="4.1133%" y="94.50">timings (easy21.py:12)</text></g><g><title>timeit (timeit.py:233) (1,862 samples, 92.22%)</title><rect x="3.8633%" y="100" width="92.2239%" height="15" fill="rgb(234,217,39)"/><text x="4.1133%" y="110.50">timeit (timeit.py:233)</text></g><g><title>timeit (timeit.py:177) (1,862 samples, 92.22%)</title><rect x="3.8633%" y="116" width="92.2239%" height="15" fill="rgb(207,178,40)"/><text x="4.1133%" y="126.50">timeit (timeit.py:177)</text></g><g><title>inner (&lt;timeit-src&gt;:6) (1,862 samples, 92.22%)</title><rect x="3.8633%" y="132" width="92.2239%" height="15" fill="rgb(221,136,13)"/><text x="4.1133%" y="142.50">inner (&lt;timeit-src&gt;:6)</text></g><g><title>&lt;lambda&gt; (easy21.py:12) (1,862 samples, 92.22%)</title><rect x="3.8633%" y="148" width="92.2239%" height="15" fill="rgb(249,199,10)"/><text x="4.1133%" y="158.50">&lt;lambda&gt; (easy21.py:12)</text></g><g><title>monte_carlo (mc.py:52) (542 samples, 26.84%)</title><rect x="69.2422%" y="164" width="26.8450%" height="15" fill="rgb(249,222,13)"/><text x="69.4922%" y="174.50">monte_carlo (mc.py:52)</text></g><g><title>prod (&lt;__array_function__ internals&gt;:5) (148 samples, 7.33%)</title><rect x="88.7568%" y="180" width="7.3304%" height="15" fill="rgb(244,185,38)"/><text x="89.0068%" y="190.50">prod (&lt;__a..</text></g><g><title>prod (numpy\core\fromnumeric.py:3051) (138 samples, 6.84%)</title><rect x="89.2521%" y="196" width="6.8351%" height="15" fill="rgb(236,202,9)"/><text x="89.5021%" y="206.50">prod (num..</text></g><g><title>_wrapreduction (numpy\core\fromnumeric.py:86) (73 samples, 3.62%)</title><rect x="92.4715%" y="212" width="3.6157%" height="15" fill="rgb(250,229,37)"/><text x="92.7215%" y="222.50">_wra..</text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:980) (3 samples, 0.15%)</title><rect x="96.1862%" y="148" width="0.1486%" height="15" fill="rgb(206,174,23)"/><text x="96.4362%" y="158.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;:1037) (3 samples, 0.15%)</title><rect x="96.1862%" y="164" width="0.1486%" height="15" fill="rgb(211,33,43)"/><text x="96.4362%" y="174.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:844) (13 samples, 0.64%)</title><rect x="96.0872%" y="132" width="0.6439%" height="15" fill="rgb(245,58,50)"/><text x="96.3372%" y="142.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:993) (8 samples, 0.40%)</title><rect x="96.3348%" y="148" width="0.3962%" height="15" fill="rgb(244,68,36)"/><text x="96.5848%" y="158.50"></text></g><g><title>_cache_bytecode (&lt;frozen importlib._bootstrap_external&gt;:1083) (8 samples, 0.40%)</title><rect x="96.3348%" y="164" width="0.3962%" height="15" fill="rgb(232,229,15)"/><text x="96.5848%" y="174.50"></text></g><g><title>set_data (&lt;frozen importlib._bootstrap_external&gt;:1108) (8 samples, 0.40%)</title><rect x="96.3348%" y="180" width="0.3962%" height="15" fill="rgb(254,30,23)"/><text x="96.5848%" y="190.50"></text></g><g><title>_write_atomic (&lt;frozen importlib._bootstrap_external&gt;:193) (6 samples, 0.30%)</title><rect x="96.4339%" y="196" width="0.2972%" height="15" fill="rgb(235,160,14)"/><text x="96.6839%" y="206.50"></text></g><g><title>&lt;module&gt; (matplotlib\cbook\__init__.py:13) (3 samples, 0.15%)</title><rect x="96.9292%" y="532" width="0.1486%" height="15" fill="rgb(212,155,44)"/><text x="97.1792%" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (3 samples, 0.15%)</title><rect x="96.9292%" y="548" width="0.1486%" height="15" fill="rgb(226,2,50)"/><text x="97.1792%" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:971) (3 samples, 0.15%)</title><rect x="96.9292%" y="564" width="0.1486%" height="15" fill="rgb(234,177,6)"/><text x="97.1792%" y="574.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:914) (3 samples, 0.15%)</title><rect x="96.9292%" y="580" width="0.1486%" height="15" fill="rgb(217,24,9)"/><text x="97.1792%" y="590.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1407) (3 samples, 0.15%)</title><rect x="96.9292%" y="596" width="0.1486%" height="15" fill="rgb(220,13,46)"/><text x="97.1792%" y="606.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1379) (3 samples, 0.15%)</title><rect x="96.9292%" y="612" width="0.1486%" height="15" fill="rgb(239,221,27)"/><text x="97.1792%" y="622.50"></text></g><g><title>&lt;module&gt; (matplotlib\rcsetup.py:24) (6 samples, 0.30%)</title><rect x="97.1768%" y="532" width="0.2972%" height="15" fill="rgb(222,198,25)"/><text x="97.4268%" y="542.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1042) (6 samples, 0.30%)</title><rect x="97.1768%" y="548" width="0.2972%" height="15" fill="rgb(211,99,13)"/><text x="97.4268%" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.30%)</title><rect x="97.1768%" y="564" width="0.2972%" height="15" fill="rgb(232,111,31)"/><text x="97.4268%" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (6 samples, 0.30%)</title><rect x="97.1768%" y="580" width="0.2972%" height="15" fill="rgb(245,82,37)"/><text x="97.4268%" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (6 samples, 0.30%)</title><rect x="97.1768%" y="596" width="0.2972%" height="15" fill="rgb(227,149,46)"/><text x="97.4268%" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (6 samples, 0.30%)</title><rect x="97.1768%" y="612" width="0.2972%" height="15" fill="rgb(218,36,50)"/><text x="97.4268%" y="622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:848) (5 samples, 0.25%)</title><rect x="97.2263%" y="628" width="0.2476%" height="15" fill="rgb(226,80,48)"/><text x="97.4763%" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.25%)</title><rect x="97.2263%" y="644" width="0.2476%" height="15" fill="rgb(238,224,15)"/><text x="97.4763%" y="654.50"></text></g><g><title>&lt;module&gt; (matplotlib\rcsetup.py:26) (4 samples, 0.20%)</title><rect x="97.4740%" y="532" width="0.1981%" height="15" fill="rgb(241,136,10)"/><text x="97.7240%" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (4 samples, 0.20%)</title><rect x="97.4740%" y="548" width="0.1981%" height="15" fill="rgb(208,32,45)"/><text x="97.7240%" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (4 samples, 0.20%)</title><rect x="97.4740%" y="564" width="0.1981%" height="15" fill="rgb(207,135,9)"/><text x="97.7240%" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (4 samples, 0.20%)</title><rect x="97.4740%" y="580" width="0.1981%" height="15" fill="rgb(206,86,44)"/><text x="97.7240%" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:848) (4 samples, 0.20%)</title><rect x="97.4740%" y="596" width="0.1981%" height="15" fill="rgb(245,177,15)"/><text x="97.7240%" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.20%)</title><rect x="97.4740%" y="612" width="0.1981%" height="15" fill="rgb(206,64,50)"/><text x="97.7240%" y="622.50"></text></g><g><title>&lt;module&gt; (matplotlib\__init__.py:107) (19 samples, 0.94%)</title